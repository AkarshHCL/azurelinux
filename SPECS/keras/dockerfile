FROM mcr.microsoft.com/cbl-mariner/base/core:2.0

ARG K_VERSION

WORKDIR /root/

#bazel version must match with the .bazelversion
RUN tdnf -y install which build-essential tar bazel6 python3-devel pyproject-rpm-macros python3-numpy python3-pip python3-packaging python3-wheel python3-requests libstdc++-devel wget ca-certificates 
RUN pip3 install tensorflow==2.15.0
# Create Working Directory
RUN wget https://github.com/keras-team/keras/archive/refs/tags/v$K_VERSION.tar.gz
RUN mkdir -p /usr/src/azl/BUILD
RUN tar -xvf v$K_VERSION.tar.gz -C /usr/src/azl/BUILD
WORKDIR /usr/src/azl/BUILD/keras-$K_VERSION
RUN rm .bazelversion

# some of the tertiary dependencies needs build command to download.
# As compiling start we exit the command. This indicates all the dependencies has been downloaded
 
RUN bazel --output_user_root=`pwd`/../k_tmp build  //keras/tools/pip_package:build_pip_package > /tmp/bazel_output.log 2>&1 & \
    pid=$! && \
    while true; do \
        if grep -q "Compiling" /tmp/bazel_output.log; then \
            echo "Compiling detected, exiting..." && \
            kill $pid && \
            exit 0; \
        fi; \
        sleep 1; \
    done

# # bazel puts cache in the md5 hash of the working directory
# # cache will be present at output_user_root/$MD5_HASH/external ie /usr/src/azl/BUILD/k_tmp/$MD5_HASH/external
RUN MD5_HASH=$(echo -n $PWD | md5sum | awk '{print $1}') && \
    mkdir -p /usr/src/azl/BUILD/k_tmp/$MD5_HASH && \
    cd /usr/src/azl/BUILD/k_tmp/$MD5_HASH && \
    tar -czvf keras-$K_VERSION-cache.tar.gz -C /usr/src/azl/BUILD/k_tmp/$MD5_HASH/external . && \
    cp keras-$K_VERSION-cache.tar.gz /root/

CMD ["bash"]

