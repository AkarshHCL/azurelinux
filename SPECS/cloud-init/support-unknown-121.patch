diff --git a/cloudinit/net/dhcp.py b/cloudinit/net/dhcp.py
index 07c1339..ce1402a 100644
--- a/cloudinit/net/dhcp.py
+++ b/cloudinit/net/dhcp.py
@@ -388,14 +388,27 @@ class IscDhclient(DhcpClient):
         ("0.0.0.0/0", "192.168.128.1")
         ]
 
+        # unknown-121 option format
+        sr3 = parse_static_routes(\
+        "0:a:0:0:1:20:a8:3f:81:10:a:0:0:1:20:a9:fe:a9:fe:a:0:0:1")
+        sr3 = [
+            ("0.0.0.0/0", "10.0.0.1"),
+            ("168.63.129.16/32", "10.0.0.1"),
+            ("169.254.169.254/32", "10.0.0.1"),
+        ]
+
         Python version of isc-dhclient's hooks:
            /etc/dhcp/dhclient-exit-hooks.d/rfc3442-classless-routes
         """
         # raw strings from dhcp lease may end in semi-colon
         rfc3442 = rfc3442.rstrip(";")
-        tokens = [tok for tok in re.split(r"[, .]", rfc3442) if tok]
+        tokens = [tok for tok in re.split(r"[, . :]", rfc3442) if tok]
         static_routes = []
 
+        # Handle unknown-121 format by converting hex to base 10.
+        if ":" in rfc3442:
+            tokens = [str(int(tok, 16)) for tok in tokens]
+
         def _trunc_error(cidr, required, remain):
             msg = (
                 "RFC3442 string malformed.  Current route has CIDR of %s "
diff --git a/cloudinit/net/ephemeral.py b/cloudinit/net/ephemeral.py
index 28c851c..d4a1095 100644
--- a/cloudinit/net/ephemeral.py
+++ b/cloudinit/net/ephemeral.py
@@ -305,6 +305,7 @@ class EphemeralDHCPv4:
             "static_routes": [
                 "rfc3442-classless-static-routes",
                 "classless-static-routes",
+                "unknown-121",
             ],
             "router": "routers",
         }
diff --git a/tests/unittests/net/test_dhcp.py b/tests/unittests/net/test_dhcp.py
index a7b6231..b75bb40 100644
--- a/tests/unittests/net/test_dhcp.py
+++ b/tests/unittests/net/test_dhcp.py
@@ -262,6 +262,17 @@ class TestDHCPParseStaticRoutes(CiTestCase):
             IscDhclient.parse_static_routes(rfc3442),
         )
 
+    def test_unknown_121(self):
+        for unknown121 in [
+            "0:a:0:0:1:20:a8:3f:81:10:a:0:0:1:20:a9:fe:a9:fe:a:0:0:1",
+            "0:a:0:0:1:20:a8:3f:81:10:a:0:0:1:20:a9:fe:a9:fe:a:0:0:1;",
+        ]:
+            assert IscDhclient.parse_static_routes(unknown121) == [
+                ("0.0.0.0/0", "10.0.0.1"),
+                ("168.63.129.16/32", "10.0.0.1"),
+                ("169.254.169.254/32", "10.0.0.1"),
+            ]
+
     def test_parse_static_routes_default_route(self):
         rfc3442 = "0,130,56,240,1"
         self.assertEqual(
