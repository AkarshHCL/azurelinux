# This is a manually backported patch from the below commit
# The commit below fixes both issues 2575 and 4011
# The current patch is modified version of the commit to fix only the issue 2575 (CVE-2023-2976)
# since issue 4011 (CVE-2020-8908) is already fixed in the spec with a patch
#
# From feb83a1c8fd2e7670b244d5afd23cba5aca43284 Mon Sep 17 00:00:00 2001
# From: cpovirk <cpovirk@google.com>
# Date: Thu, 25 May 2023 13:18:00 -0700
# Subject: [PATCH] Restrict permissions when creating temporary files and
#  directories, or fail if that's not possible.
#
# (Also, check that the provided `fileThreshold` is non-negative.)
#
# - Fixes https://github.com/google/guava/issues/2575
# - Fixes https://github.com/google/guava/issues/4011
#
# RELNOTES=Reimplemented `Files.createTempDir` and `FileBackedOutputStream` to further address [CVE-2020-8908](https://github.com/google/guava/issues/4011) and [Guava issue #2575](https://github.com/google/guava/issues/2575) (CVE forthcoming).
# PiperOrigin-RevId: 535359233
#
From f337846f9c9809f286e66cb8d567085c822c9c2d Mon Sep 17 00:00:00 2001
From: Sindhu Karri <lakarri@microsoft.com>
Date: Fri, 7 Jun 2024 08:11:55 +0000
Subject: [PATCH 1/3] FileBackedOutputStream reject resolved commit

---
 .../src/com/google/common/io/FileBackedOutputStream.java     | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/android/guava/src/com/google/common/io/FileBackedOutputStream.java b/android/guava/src/com/google/common/io/FileBackedOutputStream.java
index f8bddfb..d674c5e 100644
--- a/android/guava/src/com/google/common/io/FileBackedOutputStream.java
+++ b/android/guava/src/com/google/common/io/FileBackedOutputStream.java
@@ -92,8 +92,11 @@ public final class FileBackedOutputStream extends OutputStream {
    * @param fileThreshold the number of bytes before the stream should switch to buffering to a file
    * @param resetOnFinalize if true, the {@link #reset} method will be called when the {@link
    *     ByteSource} returned by {@link #asByteSource} is finalized
+   * @throws IllegalArgumentException if {@code fileThreshold} is negative
    */
   public FileBackedOutputStream(int fileThreshold, boolean resetOnFinalize) {
+    checkArgument(
+        fileThreshold >= 0, "fileThreshold must be non-negative, but was %s", fileThreshold);
     this.fileThreshold = fileThreshold;
     this.resetOnFinalize = resetOnFinalize;
     memory = new MemoryOutput();
@@ -203,7 +206,7 @@ public final class FileBackedOutputStream extends OutputStream {
    */
   private void update(int len) throws IOException {
     if (file == null && (memory.getCount() + len > fileThreshold)) {
-      File temp = File.createTempFile("FileBackedOutputStream", null);
+      File temp = TempFileCreator.INSTANCE.createTempFile("FileBackedOutputStream");
       if (resetOnFinalize) {
         // Finalizers are not guaranteed to be called on system shutdown;
         // this is insurance.
-- 
2.33.8


From 97df66e6aa63c572eb0cbec1e94174651f56954e Mon Sep 17 00:00:00 2001
From: Sindhu Karri <lakarri@microsoft.com>
Date: Fri, 7 Jun 2024 08:19:08 +0000
Subject: [PATCH 2/3] resolve
 guava-src-com-google-common-io-FileBackedOutputStream rejects

---
 guava/src/com/google/common/io/FileBackedOutputStream.java | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/guava/src/com/google/common/io/FileBackedOutputStream.java b/guava/src/com/google/common/io/FileBackedOutputStream.java
index f8bddfb..d674c5e 100644
--- a/guava/src/com/google/common/io/FileBackedOutputStream.java
+++ b/guava/src/com/google/common/io/FileBackedOutputStream.java
@@ -92,8 +92,11 @@ public final class FileBackedOutputStream extends OutputStream {
    * @param fileThreshold the number of bytes before the stream should switch to buffering to a file
    * @param resetOnFinalize if true, the {@link #reset} method will be called when the {@link
    *     ByteSource} returned by {@link #asByteSource} is finalized
+   * @throws IllegalArgumentException if {@code fileThreshold} is negative
    */
   public FileBackedOutputStream(int fileThreshold, boolean resetOnFinalize) {
+    checkArgument(
+        fileThreshold >= 0, "fileThreshold must be non-negative, but was %s", fileThreshold);
     this.fileThreshold = fileThreshold;
     this.resetOnFinalize = resetOnFinalize;
     memory = new MemoryOutput();
@@ -203,7 +206,7 @@ public final class FileBackedOutputStream extends OutputStream {
    */
   private void update(int len) throws IOException {
     if (file == null && (memory.getCount() + len > fileThreshold)) {
-      File temp = File.createTempFile("FileBackedOutputStream", null);
+      File temp = TempFileCreator.INSTANCE.createTempFile("FileBackedOutputStream");
       if (resetOnFinalize) {
         // Finalizers are not guaranteed to be called on system shutdown;
         // this is insurance.
-- 
2.33.8


From deca28f849c4eba0f243c69bd40a84c747711af2 Mon Sep 17 00:00:00 2001
From: Sindhu Karri <lakarri@microsoft.com>
Date: Fri, 7 Jun 2024 08:31:18 +0000
Subject: [PATCH 3/3] Add com.google.common.io.IgnoreJRERequirement to pom.xml

---
 android/pom.xml | 1 +
 pom.xml         | 1 +
 2 files changed, 2 insertions(+)

diff --git a/android/pom.xml b/android/pom.xml
index e51a8e0..c19e531 100644
--- a/android/pom.xml
+++ b/android/pom.xml
@@ -131,6 +131,7 @@
           <artifactId>animal-sniffer-maven-plugin</artifactId>
           <version>${animal.sniffer.version}</version>
           <configuration>
+            <annotations>com.google.common.io.IgnoreJRERequirement</annotations>
             <signature>
               <groupId>org.codehaus.mojo.signature</groupId>
               <artifactId>java16-sun</artifactId>
diff --git a/pom.xml b/pom.xml
index 737f182..f653afe 100644
--- a/pom.xml
+++ b/pom.xml
@@ -132,6 +132,7 @@
           <artifactId>animal-sniffer-maven-plugin</artifactId>
           <version>${animal.sniffer.version}</version>
           <configuration>
+            <annotations>com.google.common.io.IgnoreJRERequirement</annotations>
             <signature>
               <groupId>org.codehaus.mojo.signature</groupId>
               <artifactId>java18</artifactId>
-- 
2.33.8

