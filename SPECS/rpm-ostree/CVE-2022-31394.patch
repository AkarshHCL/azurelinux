From ef7e695d84c55ab6a4aff68847827b6b18a49532 Mon Sep 17 00:00:00 2001
From: Nan Liu <liunan@microsoft.com>
Date: Thu, 9 Mar 2023 14:48:19 -0800
Subject: [PATCH] Address  CVE-2022-31394 From
 4f69d2193a0ccfd5d134f376fb490846c86aa0d7 Mon Sep 17 00:00:00 2001 From:
 silence <xxx@email.com> Date: Sat, 7 May 2022 17:21:48 +0800 Subject: [PATCH]
 feat(h2): add max_header_list_size

From 2e149560809b60165dff5b548152a1f7dd8d8931 Mon Sep 17 00:00:00 2001
From: silence-coding <32766901+silence-coding@users.noreply.github.com>
Date: Fri, 13 May 2022 10:01:31 +0800
Subject: [PATCH] feat(h2): add max_header_list_size: rename
 max_header_list_size to http2_max_header_list_size

Co-authored-by: Sean McArthur <sean@seanmonstar.com>
---
---
 vendor/hyper/src/proto/h2/server.rs |  7 ++++++-
 vendor/hyper/src/server/conn.rs     | 10 ++++++++++
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/vendor/hyper/src/proto/h2/server.rs b/vendor/hyper/src/proto/h2/server.rs
index 1222663d..7469f3bd 100644
--- a/vendor/hyper/src/proto/h2/server.rs
+++ b/vendor/hyper/src/proto/h2/server.rs
@@ -32,6 +32,8 @@ use crate::{Body, Response};
 const DEFAULT_CONN_WINDOW: u32 = 1024 * 1024; // 1mb
 const DEFAULT_STREAM_WINDOW: u32 = 1024 * 1024; // 1mb
 const DEFAULT_MAX_FRAME_SIZE: u32 = 1024 * 16; // 16kb
+// 16 MB "sane default" taken from golang http2
+const DEFAULT_SETTINGS_MAX_HEADER_LIST_SIZE: u32 = 16 << 20;
 
 #[derive(Clone, Debug)]
 pub(crate) struct Config {
@@ -44,6 +46,7 @@ pub(crate) struct Config {
     pub(crate) keep_alive_interval: Option<Duration>,
     #[cfg(feature = "runtime")]
     pub(crate) keep_alive_timeout: Duration,
+    pub(crate) max_header_list_size: u32,
 }
 
 impl Default for Config {
@@ -58,6 +61,7 @@ impl Default for Config {
             keep_alive_interval: None,
             #[cfg(feature = "runtime")]
             keep_alive_timeout: Duration::from_secs(20),
+            max_header_list_size: DEFAULT_SETTINGS_MAX_HEADER_LIST_SIZE,
         }
     }
 }
@@ -108,7 +112,8 @@ where
         builder
             .initial_window_size(config.initial_stream_window_size)
             .initial_connection_window_size(config.initial_conn_window_size)
-            .max_frame_size(config.max_frame_size);
+            .max_frame_size(config.max_frame_size)
+            .max_header_list_size(config.max_header_list_size);
         if let Some(max) = config.max_concurrent_streams {
             builder.max_concurrent_streams(max);
         }
diff --git a/vendor/hyper/src/server/conn.rs b/vendor/hyper/src/server/conn.rs
index 085f8901..6bbb2848 100644
--- a/vendor/hyper/src/server/conn.rs
+++ b/vendor/hyper/src/server/conn.rs
@@ -474,6 +474,16 @@ impl<E> Http<E> {
         self
     }
 
+    /// Sets the max size of received header frames.
+    ///
+    /// Default is currently ~16MB, but may change.
+    #[cfg(feature = "http2")]
+    #[cfg_attr(docsrs, doc(cfg(feature = "http2")))]
+    pub fn http2_max_header_list_size(&mut self, max: u32) -> &mut Self {
+        self.h2_builder.max_header_list_size = max;
+        self
+    }
+
     /// Set the maximum buffer size for the connection.
     ///
     /// Default is ~400kb.
-- 
2.25.1

